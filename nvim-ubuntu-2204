FROM ubuntu:jammy-20240227

ARG DEBIAN_FRONTEND=noninteractive

# defaults
RUN apt-get update \ 
  && apt-get install -y build-essential --no-install-recommends make \
  git \
  libssl-dev \
  zlib1g-dev \
  libbz2-dev \
  libreadline-dev \
  libsqlite3-dev \
  wget \
  curl \
  llvm \
  libncurses5-dev \
  xz-utils \
  tk-dev \
  libxml2-dev \
  libxmlsec1-dev \
  libffi-dev \
  liblzma-dev \
  htop \
  sudo \
  unzip \
  vim \
  tmux \
  curl \
  screen \
  cloc \
  cmake \
  libopenmpi-dev \
  locales \
  software-properties-common \
  gpg-agent

# install locale
RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \
  locale-gen
ENV LANG en_US.UTF-8  
ENV LANGUAGE en_US:en  
ENV LC_ALL en_US.UTF-8

# install python 3.12
RUN apt-get install software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN apt-get update
RUN apt-get install -y python3.12
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1


# install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh 

# other tools
# gdu
RUN curl -L https://github.com/dundee/gdu/releases/latest/download/gdu_linux_amd64.tgz | tar xz && \
  chmod +x gdu_linux_amd64 && \
  mv gdu_linux_amd64 /usr/bin/gdu

# lazygit
RUN LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*') && \
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" && \
  tar xf lazygit.tar.gz lazygit && \
  install lazygit /usr/local/bin

# bottom
RUN curl -LO https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom_0.9.6_amd64.deb && \
  dpkg -i bottom_0.9.6_amd64.deb

# install nvim
# install all needed to run nvim
RUN apt-get install -y fzf \
  ripgrep \
  tree \
  xclip \
  tzdata \
  ninja-build \
  gettext \ 
  libtool \ 
  libtool-bin \ 
  autoconf \
  automake \ 
  cmake \ 
  g++ \
  pkg-config \
  zip \ 
  fd-find \
  unzip

# install go
WORKDIR /root/downloads
RUN wget https://go.dev/dl/go1.22.2.linux-amd64.tar.gz
RUN rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.2.linux-amd64.tar.gz
RUN export PATH=$PATH:/usr/local/go/bin


# update the node otherwiser autocompletion may not work
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | sudo bash - && sudo apt-get install -y nodejs

# install NVIM
ENV CMAKE_BUILD_TYPE=RelWithDebInfo

RUN mkdir -p /root/TMP
RUN cd /root/TMP && git clone https://github.com/neovim/neovim
RUN cd /root/TMP/neovim && git checkout stable && make -j4 && make install
RUN rm -rf /root/TMP

# add config
WORKDIR /root/.config/nvim
RUN git clone --depth 1 https://github.com/Acatsama0871/nvim-config.git .

#* aws cli
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && sudo ./aws/install

#* github cli
RUN sudo mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
    && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y

#* pkl
WORKDIR /bin
RUN curl -L -o pkl https://github.com/apple/pkl/releases/download/0.25.2/pkl-linux-amd64 && chmod +x pkl

# go to work space
WORKDIR /workspace


